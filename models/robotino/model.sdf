<?xml version='1.0'?>
<sdf version='1.4'>
  <model name="robotino">
    <static>false</static>
    <link name="base_link">
      <pose>0 0 0.001 0 0 0 </pose>
      <gravity>true</gravity>
      <inertial>
        <mass>30</mass>
        <pose>0 0 0.015 0 0 0</pose>
        <inertia>
            <!-- according to http://en.wikipedia.org/wiki/List_of_moments_of_inertia for a solid cylinder of radius r=0.225, height h=0.15, mass m=30 -->
            <ixx>0.4359375</ixx>
            <ixy>0.0</ixy>
            <ixz>0.0</ixz>
            <iyy>0.4359375</iyy>
            <iyz>0.0</iyz>
            <izz>0.759375</izz>
        </inertia>
      </inertial>
      <visual name='base_link-visual'>
	<pose>0.01 0 0.00 0 0 1.570795</pose>
	<geometry>
	  <mesh>
	    <uri>model://robotino/meshes/RobotinoBody.dae</uri>
	    <scale>0.01 0.01 0.01</scale>
	  </mesh>
	</geometry>
	<cast_shadows>false</cast_shadows>
      </visual>
      <collision name='base_link-collision'>
        <pose>0 0 0.025 0 0 0</pose>
        <geometry>
          <cylinder>
	    <length>0.05</length>
	    <radius>0.175</radius>
	  </cylinder>
        </geometry>
	<surface>
	  <friction>
	    <ode>
	      <mu>0.2</mu>
              <mu2>0.2</mu2>
              <slip1>0.8</slip1>
              <slip2>0.8</slip2>
	    </ode>
	  </friction>
	</surface>
      </collision>
      <collision name='chasis-collision-for-laser'>
        <pose>-0.05 0 0.17 0 0 0</pose>
        <geometry>
          <cylinder>
	    <length>0.08</length>
	    <radius>0.12</radius>
	  </cylinder>
        </geometry>
      </collision>
      <visual name='wheel0-visual'>
        <pose>-0.12 0 0.04 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://robotino/meshes/RobotinoWheel.dae</uri>
	    <scale>0.01 0.01 0.01</scale>
	  </mesh>
        </geometry>
      </visual>
      <visual name='wheel1-visual'>
        <pose>0.06 -0.104 0.045 0 0 -1.047</pose>
        <geometry>
          <mesh>
            <uri>model://robotino/meshes/RobotinoWheel.dae</uri>
	    <scale>0.01 0.01 0.01</scale>
	  </mesh>
        </geometry>
      </visual>
      <visual name='wheel2-visual'>
        <pose>0.06 0.104 0.045 0 0 1.047</pose>
        <geometry>
          <mesh>
            <uri>model://robotino/meshes/RobotinoWheel.dae</uri>
	    <scale>0.01 0.01 0.01</scale>
	  </mesh>
        </geometry>
      </visual>
    </link>


    <include>
      <uri>model://hokuyo_ros</uri>
      <pose>0.085 0 0.15 0 0 0</pose> <!-- 0.085 0 0.15 0 0 0 -->
    </include>
    <joint name="hokuyo_joint" type="revolute">
      <child>hokuyo::body</child>
      <parent>base_link</parent>
      <pose>0.085 0 0.03 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <upper>0</upper>
          <lower>0</lower>
        </limit>
      </axis>
    </joint>


    <include>
      <uri>model://webcam_ros</uri>
      <pose>0.045 0 0.22 0 0 0</pose>
    </include>
    <joint name="webcam_sensor_joint" type="revolute">
      <child>cam::body</child>
      <parent>base_link</parent>
      <pose>0.04 0 0.02 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <upper>0</upper>
          <lower>0</lower>
        </limit>
      </axis>
    </joint>

    <include>
      <uri>model://line_sensor_left</uri>
      <pose>0.15 0.01 0.015 0 1.57 0</pose>
    </include>
    <joint name="line_sensor_left_joint" type="revolute">
      <child>line_sensor_left::body</child>
      <parent>base_link</parent>
      <pose>0.15 0.01 0.015 0 1.57 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <upper>0</upper>
          <lower>0</lower>
        </limit>
      </axis>
    </joint>

    <include>
      <uri>model://line_sensor_right</uri>
      <pose>0.15 -0.01 0.015 0 1.57 0</pose>
    </include>
    <joint name="line_sensor_right_joint" type="revolute">
      <child>line_sensor_right::body</child>
      <parent>base_link</parent>
      <pose>0.15 -0.01 0.015 0 1.57 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <upper>0</upper>
          <lower>0</lower>
        </limit>
      </axis>
    </joint>

    <plugin name="robot_controller" filename="libgazebo_ros_planar_move.so">
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <odometryRate>20.0</odometryRate>
        <robotBaseFrame>base_link</robotBaseFrame>
        <robotNamespace>/</robotNamespace>
    </plugin>
    <!-- <plugin name="ros_force_based_controller" filename="libridgeback_ros_force_based_move.so"> -->
        <!-- <robotNamespace></robotNamespace> -->
        <!-- <commandTopic>cmd_vel</commandTopic> -->
        <!-- <odometryTopic>odom</odometryTopic> -->
        <!-- <odometryFrame>odom</odometryFrame> -->
        <!-- <odometryRate>20.0</odometryRate> -->
        <!-- <robotBaseFrame>base_link</robotBaseFrame> -->
        <!-- <publishOdometryTf>true</publishOdometryTf> -->
        <!-- <yaw_velocity_p_gain>500</yaw_velocity_p_gain> -->
        <!-- <x_velocity_p_gain>1000</x_velocity_p_gain> -->
        <!-- <y_velocity_p_gain>1000</y_velocity_p_gain> -->
        <!-- <cmdVelTimeOut>0.25</cmdVelTimeOut> -->
    <!-- </plugin> -->

  </model>
</sdf>
